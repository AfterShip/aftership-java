package com.aftership.sdk.model.tracking;

import com.aftership.sdk.model.checkpoint.Checkpoint;
import com.aftership.sdk.model.estimateddeliverydate.EstimatedDeliveryDate;
import com.aftership.sdk.model.latestestimateddelivery.LatestEstimatedDelivery;
import lombok.Data;

import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * Tracking Object
 *
 * @see <a href="https://developers.aftership.com/reference/object-tracking"> tracking object</a>
 */
@Data
public class Tracking {

  /**
   * A unique identifier generated by AfterShip for the tracking.
   *
   * <p>String
   */
  private String id;

  /**
   * Date and time of the tracking created.
   *
   * <p>DateTime
   */
  private Date createdAt;

  /**
   * Date and time of the tracking last updated.
   *
   * <p>DateTime
   */
  private Date updatedAt;

  /**
   * Date and time the tracking was last updated
   *
   * <p>DateTime
   */
  private Date lastUpdatedAt;

  /**
   * Tracking number of a shipment.
   *
   * <p>String</p>
   */
  private String trackingNumber;

  /**
   * Unique code of courier. Get courier slug here
   *
   * <p>String
   */
  private String slug;

  /**
   * Whether or not AfterShip will continue tracking the shipments. Value is false when tag (status)
   * is Delivered, Expired, or further updates for 30 days since last update.
   *
   * <p>Boolean
   */
  private Boolean active;

  /**
   * Google cloud message registration IDs to receive the push notifications. Accept either array or
   * comma separated as input.
   *
   * <p><b>Array or String</b>
   */
  private List<String> android;

  /**
   * Custom fields of the tracking.
   *
   * <p><b>Hash</b>
   */
  private Map<String, String> customFields;

  /**
   * Customer name of the tracking.
   *
   * <p>String
   */
  private String customerName;

  /**
   * Total transit time in days.
   * For delivered shipments: Transit time (in days) = Delivered date - Pick-up date
   * For undelivered shipments: Transit time (in days) = Current date - Pick-up date
   * Value as null for the shipment without pick-up date.
   *
   * <p>Number
   */
  private int transitTime;

  /**
   * Destination country of the tracking. ISO Alpha-3 (three letters). If you use postal service to
   * send international shipments, AfterShip will automatically get tracking results from
   * destination postal service based on destination country.
   *
   * <p>String
   */
  private String destinationCountryIso3;

  /**
   * Shipping address that the shipment is shipping to.
   *
   * <p>String
   */
  private String destinationRawLocation;

  /**
   * Destination country of the tracking detected from the courier. ISO Alpha-3 (three letters).
   * Value will be null if the courier doesn't provide the destination country.
   *
   * <p>String
   */
  private String courierDestinationCountryIso3;

  /**
   * Email address(es) to receive email notifications. Comma separated for multiple values.
   *
   * <p>Array
   */
  private List<String> emails;

  /**
   * Expected delivery date (nullable). Available format: YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or
   * YYYY-MM-DDTHH:MM:SS+TIMEZONE
   *
   * <p>String
   */
  private String expectedDelivery;

  /**
   * Apple iOS device IDs to receive the push notifications. Accept either array or comma separated
   * as input.
   *
   * <p><b>Array or String</b>
   */
  private List<String> ios;

  /**
   * Text field for the note.
   *
   * <p>String
   */
  private String note;

  /**
   * Text field for order ID
   *
   * <p>order_id
   */
  private String orderId;

  /**
   * Text field for order path
   *
   * <p>String
   */
  private String orderIdPath;

  /**
   * Text field for order number
   *
   * <p>String
   */
  private String orderNumber;

  /**
   * Date and time of the order created
   *
   * <p>String
   */
  private String orderDate;

  /**
   * Origin country of the tracking. ISO Alpha-3 (three letters).
   *
   * <p>String
   */
  private String originCountryIso3;

  /**
   * Number of packages under the tracking (if any).
   *
   * <p>Number
   */
  private Integer shipmentPackageCount;

  /**
   * Date and time the tracking was picked up
   *
   * <p>String
   */
  private String shipmentPickupDate;

  /**
   * Date and time the tracking was delivered
   *
   * <p>String
   */
  private String shipmentDeliveryDate;

  /**
   * Shipment type provided by carrier (if any).
   *
   * <p>String
   */
  private String shipmentType;

  /**
   * Used to add tags to your shipments to help categorize and filter them easily.
   */
  private List<String> shipmentTags;

  /**
   * Shipment weight provied by carrier (if any)
   *
   * <p>Float
   */
  private Float shipmentWeight;

  /**
   * Weight unit provied by carrier, either in kg or lb (if any)
   *
   * <p>String
   */
  private String shipmentWeightUnit;

  /**
   * Signed by information for delivered shipment (if any).
   *
   * <p>String
   */
  private String signedBy;

  /**
   * Phone number(s) to receive sms notifications. The phone number(s) to receive sms notifications.
   * Phone number should begin with `+` and `Area Code` before phone number. Comma separated for
   * multiple values.
   *
   * <p>Array
   */
  private List<String> smses;

  /**
   * Source of how this tracking is added.
   *
   * <p>source
   */
  private String source;

  /**
   * Current status of tracking. Values include Pending InfoReceived InTransit OutForDelivery
   * AttemptFail Delivered AvailableForPickup Exception Expired (See tag definition) @link
   * https://docs.aftership.com/api/4/delivery-status
   *
   * <p>String
   */
  private String tag;

  /**
   * Current subtag of tracking. (See subtag definition)
   *
   * @link https://help.aftership.com/hc/en-us/articles/360007823253
   * <p>String
   */
  private String subtag;

  /**
   * Normalized tracking message. (See subtag definition)
   *
   * @link https://help.aftership.com/hc/en-us/articles/360007823253
   * <p>String
   */
  private String subtagMessage;

  /**
   * Title of the tracking.
   *
   * <p>String
   */
  private String title;

  /**
   * Number of attempts AfterShip tracks at courier's system.
   *
   * <p>Number
   */
  private Integer trackedCount;

  /**
   * Indicates if the shipment is trackable till the final destination. Three possible values: true
   * false null
   *
   * <p>Boolean or Null
   */
  private Boolean lastMileTrackingSupported;

  /**
   * Store, customer, or order language of the tracking. ISO 639-1 Language Code .
   *
   * @link https://help.aftership.com/hc/en-us/articles/360001623287-Supported-Language-Parameters
   * <p>String or Null
   */
  private String language;

  /**
   * The token to generate the direct tracking link: https://yourusername.aftership.com/unique_token
   * or https://www.aftership.com/unique_token
   *
   * <p>String
   */
  private String uniqueToken;

  /**
   * Array of Hash describes the checkpoint information.
   *
   * <p>Array of Checkpoint Object
   */
  private List<Checkpoint> checkpoints;

  /**
   * Phone number(s) subscribed to receive sms notifications. Comma separated for multiple values
   *
   * <p>Array
   */
  private List<String> subscribedSmses;

  /**
   * Email address(es) subscribed to receive email notifications. Comma separated for multiple
   * values
   *
   * <p>Array
   */
  private List<String> subscribedEmails;

  /**
   * Whether or not the shipment is returned to sender. Value is true when any of its checkpoints
   * has subtagException_010(returning to sender) orException_011 (returned to sender). Otherwise
   * value is false
   *
   * <p><font color="red">Boolean</font>
   */
  private Boolean returnToSender;

  /**
   * Promised delivery date of an order inYYYY-MM-DDformat.
   *
   * <p>String
   */
  private String orderPromisedDeliveryDate;

  /**
   * Shipment delivery type pickup_at_store pickup_at_courier door_to_door
   *
   * <p>String
   */
  private String deliveryType;

  /**
   * Shipment pickup location for receiver
   *
   * <p>String
   */
  private String pickupLocation;

  /**
   * Shipment pickup note for receiver
   *
   * <p>String
   */
  private String pickupNote;

  /**
   * Official tracking URL of the courier (if any)
   *
   * <p>String
   */
  private String courierTrackingLink;

  /**
   * date and time of the first attempt by the carrier to deliver the package to the addressee
   * Available format: YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+TIMEZONE
   *
   * <p><font color="red">String or Null</font>
   */
  private String firstAttemptedAt;

  /**
   * Delivery instructions (delivery date or address) can be modified by visiting the link if
   * supported by a carrier.
   */
  private String courierRedirectLink;

  /**
   * Account number of the shipper for a specific courier. Required by some couriers, such
   * asdynamic-logistics
   *
   * <p>String
   */
  private String trackingAccountNumber;

  /**
   * Origin Country of the shipment for a specific courier. Required by some couriers, such asdhl
   *
   * <p>String
   */
  private String trackingOriginCountry;

  /**
   * Destination Country of the shipment for a specific courier. Required by some couriers, such
   * aspostnl-3s
   *
   * <p>String
   */
  private String trackingDestinationCountry;

  /**
   * Key of the shipment for a specific courier. Required by some couriers, such assic-teliway
   *
   * <p>String>
   */
  private String trackingKey;

  /**
   * The postal code of receiver's address. Required by some couriers, such asdeutsch-post
   *
   * <p>String
   */
  private String trackingPostalCode;

  /**
   * Shipping date inYYYYMMDDformat. Required by some couriers, such asdeutsch-post
   *
   * <p>String
   */
  private String trackingShipDate;

  /**
   * Located state of the shipment for a specific courier. Required by some couriers, such
   * asstar-track-courier
   *
   * <p>String
   */
  private String trackingState;

  /**
   * The difference days of the on time.
   * If it’s early 3 days, difference would be -3, if the tracking is late for 3 day’s, difference would be 3.
   *
   * <p>String
   */
  private Integer onTimeDifference;

  /**
   * Whether the tracking is delivered on time or not.
   * Six status:
   * - on-time
   * - early
   * - late
   * - overdue
   * - trending-late
   * - trending-on-time
   *
   * <p>String
   */
  private String onTimeStatus;

  /**
   * Estimated delivery time of the shipment based on your custom EDD settings.
   * It uses the format YYYY-MM-DD based on the shipment recipient’s timezone.
   */
  private LatestEstimatedDelivery customEstimatedDeliveryDate;

  /**
   * Array of Hash describes the checkpoint information.
   *
   * <p>EstimatedDeliveryDate
   */
  private EstimatedDeliveryDate aftershipEstimatedDeliveryDate;

  /**
   * The tags of the order.
   *
   * <p>Array
   */
  private List<String> orderTags;

  /**
   * The latest estimated delivery date.
   * May come from the carrier, AfterShip AI, or based on your custom settings.
   * This can appear in 1 of 3 formats based on the data received.
   * 1. Date only: `YYYY-MM-DD`
   * 2. Date and time: `YYYY-MM-DDTHH:mm:ss`
   * 3. Date, time, and time zone: `YYYY-MM-DDTHH:mm:ssZ`
   */
  private LatestEstimatedDelivery latestEstimatedDelivery;

  /**
   * The shipment’s original estimated delivery date. It could be provided by the carrier, AfterShip AI, or based on
   * your custom settings. The format of carrier EDDs may differ depending on how the carrier provides it:
   * YYYY-MM-DD
   * YYYY-MM-DDTHH:mm:ss
   * YYYY-MM-DDTHH:mm:ssZ
   * AfterShip AI and custom EDDs always use the format YYYY-MM-DD. All EDDs use the shipment recipient’s timezone
   */
  private LatestEstimatedDelivery firstEstimatedDelivery;

  /**
   * The next couriers get the second carrier information from user or AfterShip.
   */
  private List<NextCourier> nextCouriers;

  /**
   * The courier connection id tells which carrier account you’ve used to handle a shipment so we can track it.
   */
  private String courierConnectionId;
}
